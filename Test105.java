
/*=====================================================================
	■■■만년달력■■■
	- 다음과 같은 기능의 프로그램을 구현한다.
=======================================================================*/

//실행 예)
//연도를 입력하세요 : 2022
//월 을 입력하세요  : 7

/*
	[	2022년 7월	]

	일 월 화 수 목 금 토
  ==========================
					1  2
	 3  4  5  6  7  8  9
	10 11 12 13 14 15 16
	17 18 19 20 21 22 23
	24 25 26 27 28 29 30
	31
  ==========================
계속하려면 아무 키나 누르세요........

*/

/*  문제 분석
-	 서기 1년 1월 1일은 월요일이다 이거부터 중요
	연도가 4의 배수이면서 100의 배수가 아니거나,
	400의 배수이면 2월은 29일까지 있는 윤년
	나머지 2월은 28일 (평년)

-	만약 2022년 7월 달력을 그린다고 가정하면
	1년 1월 1일 ~ 2022년 6월 31일 까지의 날 수를 구한다
	--------------------------------
	(1년 1월 1일 ~ 2021년 12월 31일) + (2022년 1월 1일 ~ 2022년 6월 30일 )
	그날수에 + 1 연산을 수행하면 (2022년 7월 1일의 요일 확인)
	----------------------------------------여기까지 수행하면 달력 그릴 준비 끝

  - 요일  = 전체날수 % 7
	요일  = 0 일요일
	요일  = 1 월요일
	요일  = 2 화요일
				:

*/
import java.io.BufferedReader;			
import java.io.InputStreamReader;
import java.io.IOException;

public class Test105
{
	public static void main(String[] args) throws IOException
	{	
		//인스턴스생성
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int[] days = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; 
		//배열 인덱스 0   1    2   3   4   5   6   7   8   9  10  11
		//월		  1   2    3   4   5   6   7   8   9  10  11  12
 		//테스트
		//System.out.println(days.length);
		//주요
		int nalsu, y, m, w;			//날수, 년, 월, 요일

		do
		{
			System.out.print("연도를 입력하세요 : ");
			y = Integer.parseInt(br.readLine());
		}
		while (y<1);

		//입력받은 년도가 1보다 작으면 다시입력받기
		do
		{
			System.out.print("월을 입력하세요 : ");
			m = Integer.parseInt(br.readLine());
		}
		while (m<1 || m>12);

		//입력받은 월이 1보다 작거나 12보다 크면 다시 입력받기

		//-------------여기까지 수행하면 유효한 년도와 월을 사용자로부터 입력받은상태

		//입력받은연도에 해달하는 2월의 마지막날계산

		if (y%4==0 && y%100==0 || y%400==0)		//윤년
		{
			days[1] = 29;
		}
		//else 구문은
		//현재 days 배열의 1번째 요소가 28일로 구성 되어있는 상태이기 때문에
		//생략가능한 구문이된다.

		//1년1월 1일 ~ 입력받은 연도의 이전 년도 12월 31일 까지의 날 수 계산
		nalsu = (y-1)*365 + (y-1)/4 - (y-1)/100 + (y-1)/400;

		//(1년 1월 1일 ~ 2021년 12월 31일)

		//입력받은 연도 1월 1일  ~ 입력한 월의 이전 월까지 날 수 계산
		for (int i =0;i<(m-1) ; i++)
		{
			nalsu += days[i];				//배열을 날수에 입힌다
		}
		//입력받은 월의 1일을 날수 누적연산
			nalsu += 1;  //++nalsu;

		//--------------여기까지 수행하면 모든 날수에 대한 종합처리 완료

		//요일 확인
		//--입력받은 연의 입력받은 월의 1일이 무슨 요일인지 확인하기 위한 연산
		w = nalsu % 7;		//날수를 7로 나눈 나머지가 요일이겠다.
		//w: 0 일요일  이개념 중요~!~!
		//w: 1 월요일
		//w: 2 수요일

		//테스트
		//System.out.println("w : "+ w);
		/*
		연도를 입력하세요 : 2022
		월을 입력하세요 : 7
		w : 5
		2022년 7월 1일은 금요일(5)이라는 의미
------------------------- 여기까지 수행하면 해당 연도 해당 월의 1일이 무슨 요일인지 확인 완료~!
		*/

		//출력(달력 그리기)
		System.out.println();		//개행
		System.out.printf("\t[ %d 년 %d월 ]%n" , y, m);
		System.out.println();
		System.out.println("  일  월  화  수  목  금  토"); //하나의 요일은 4칸
		System.out.println("=============================");
	
		//특정 요일부터 1일이 출발할 수 있도록 공백 발생(지점)
		for (int i =1;i<=w ;i++ )
		{
			System.out.print("    ");		//공백 4칸지정
		
		}
		//테스트
		//System.out.printf("%4d", 1);

		//해당 월 (입력한 월)의 날짜만 출력될 수 있도록 반복문 구성
		for (int i =1;i<=days[m-1] ;i++ )		//m하게되면 월이랑 인덱스랑 하나씩 차이나니 -1
		{

			System.out.printf("%4d", i);
			w++;
			//반복문을 통해 날짜를 처리하는만큼
			//요일도 함께 증가 할 수있도록 처리~!
			
			//일요일을 구성하려는 경우
			//즉 이번 출력하고자 하는 날짜가 일요일인경우

			if (w%7==0)
			{
				System.out.println();
			}	
		}

		if (w%7!=0)
			{
				System.out.println();
			}
		//달의 마지막 날짜가 출력 형식을 모두 채웠을경우
		//즉 토요일까지 라인전체가 출력되었을경우
		//이미 일요일 개행이 이루어 졌기 때문에
		//이 경우는 추가 개행을 하지않도록 처리~!  ?????????
		
		System.out.println("=============================");
	}
}

/*
		//연산 및 처리
		int [] months = {31, 0, 30, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

		int nalsu;
		if (y%4==0 && y%100!=0 || y%400==0)
		{
			months[1] = 29;
		}
		else
			months[1] = 28;

		//①1년 1월 1일부터 입력받은 년도 전 년도 까지 날수 계산
		nalsu = (y-1)*365 + (y-1)/4-(y-1)/100 + (y-1)/400;

			//System.out.println("날 수 : " + nalsu);

			//날수를 달수만큼 증가시켜라
			for (int i = 0;i<(m-1) ;i++ )	//7월 을 입력한다면 6월 말까지의 일수를 
			{
				nalsu += months[i];			//
			}
			//System.out.println("날 수 : " + nalsu);

			int dayStart = day % 7;			//전달의 마지막 날 요일

			char[]


			System.out.println();



			for (int i =0;i<=dayStart ;i++ )
			{
				System.out.print("   ");
			}

			for (int i = 0;i<=month[month-1] ;i++ )
			{
				System.out.printf("%3d",i);
				if ((day+1)%7==6)
				{
					System.out.println();
				}
			}
			System.out.println();
		
*/