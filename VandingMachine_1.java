import java.io.BufferedReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Hashtable;

//Map 자료구조 를 통해 key엔 아이템명 value엔 사이즈를 표기한다.


//속성
//멤버변수(member variable), 특성(attribute), 필드(field), 상태(state)
//-기능(function )
//메서드(method), 함수(function), 행위(behavior)


public class VandingMachine_1
{
	public 
}
public class AdminMode
{
	public static Integer sel;

	static
	{
		//사용자 입력값 초기화
		sel = 1;		//
		con = "Y";		//계속 할지 여부
	}
	sel = Integer.parseInt
	{
		
	}
	//재고와 잔돈을 채워놓는 기능을 하는 클래스 불러오기
	//사용자 모드 전환 메소드();
	//관리자모드에서 재고를 추가하고 갈 필요 없이 처음 셋팅값을 주고 시작한다
	//관리자모드에서 재고를 추가할 때는 (부족한 항목은 한번에 맥스값으로 주도록 설정)

	//종료 System.exit(-1);
	public static void exit() throws IOException
	{
		System.out.println("처음부터 다시 시작합니다!")
		System.exit(-1);
	}

	//(매출 클래스에서 매출 관련 클래스 호출)
	//(랭킹 클래스에서 랭킹 관련 클래스 호출)
	//(잔돈의 재고를 관리하는 클래스 호출)
	//(판매모드 변경 (UserMode();)
}

public class coinTray
{
	//잔돈의 재고를 관리하는 클래스
	//거슬러줄 잔돈을 채워놓는다.
	//50000/ 10000 / 5000/ 1000 / 500/ 100/ 10 
}
public class stock
{
	//재고를 관리하는 클래스
	//재고를 max10개로 설정해서 팔린 재고들만 채워준다
}
public class Ranking
{
	//랭킹조회

}
public class profit
{
	//현재 매출
}
public class Event
{
	//이벤트 기능을 담당하는 클래스를 설계해서 다른 클래스에서 호출
}
public class Items
{
	//상품의 속성을 담당하는 클래스 설계
}
public class UserMode
{
	//사용자에게 메뉴 (출력/재고) 보이도록
	 public Machine() {하는 메소드
        items = new ArrayList<>();
						//번호 품명 가격  s개수 m개수 l개수
        items.add(new Item(1, ": 민소매", 5000, 10,10, 10));
        items.add(new Item(2, ": 반팔", 15000, 10, 10, 10));
        items.add(new Item(3, ": 코트", 50000, 10, 10, 10));
        items.add(new Item(4, ": 패팅", 100000, 10, 10, 10));
        items.add(new Item(5, ": 히트텍 상의",10000, 10, 10, 10));
	//사용자에게 메뉴 (출력/재고) 보이도록
	//상품을 선택 받는 기능의 메소드 구현
	//금액을 투입 받는 프로세스
	//투입받은 금액에 대한 판별 기능
	//거스름 돈 반환
	//이벤트 발생시 이벤트 메세지 출력();

}
public class 상의/하의
{
}
public class 민소매() extends 상의/하의
{
	
//상의/하의 ob1 = new 민소매('S', ....);

}
public class 반팔() extends 상의/하의
{
}
public class 코트() extends 상의/하의
{
}
public class 패딩() extends 상의/하의
{
}
public class 히트텍상의() extends 상의/하의
{
}
public class () extends 상의/하의
{
}
public class 패딩() extends 상의/하의
{
}
public class variety
{
}
