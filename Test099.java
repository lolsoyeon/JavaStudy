
/*=======================================
■■■■클래스와 인스턴스■■■■
- 클래스 설계
- 배열의 활용
- 접근제어 지시자와 정보은닉
- 일정관리 게시판 / 달력 컨트롤 ★★
=========================================*/

// 사용자로부터 년, 월, 일을 입력받아
// 해당 날짜의 요일을 출력하는 프로그램을 구현한다.
// 단, 달력 클래스(Calender)는 사용하지않는다.
// 또한, 클래스의 개념을 활용하여 작성할 수 있도록한다. (→WeekDay 클래스 설계)
// 그리고, 배열의 개념도 적용시켜 작성할 수 있도록 한다.
// 접근제어 지시자 의 개념도 확인하여 작성 할 수 있도록한다.
// 최종적으로...
// WeekDay 클래스 설계를 통해
// Test099클래스의 main()메소드가 정상적으로 프로그램 실행될 수 있도록한다.

// 실행 예)
//  년 월 일 입력(공백 구분) : 2022 7 15 
// >>2022년 7월 15일 → 금요일
// 계속하려면 아무 키나 누르세요....
// 1월 1일       월화수목금토
//				1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 1

//	Hint
//	-1년 1월 1일 → "월요일"
//	-1년은 365일이 아니다.
//  -2월의 마지막 날짜가 29일 → 윤년 366 
//	-2월의 마지막 날짜가 28일 → 평년 365
//  -윤년의 판별 조건
//  년도가 4의 배수이면서 100의 배수가 아니거나,
//	400의 배수이면 윤년, 그 이외의 년도는 평년

import java.util.Scanner;

class WeekDay
{
	//변수와 메소드
	//주요 변수선언
	private int y , m , d;				//입력받을 년, 월, 일
										//클래스에서 직접 선언한 멤버변수는 예외없이 Private화 한다.

	//메소드 기능 년, 월, 일 입력 받기
	public void input() 
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("  년 월 일 입력(공백 구분) : " );			//2022 7 15 y,m,d

		y = sc.nextInt();
		m = sc.nextInt();
		d = sc.nextInt();
	}

	//메소드 기능 요일 산출하기

	public String week()
	{
		//각월의 마지막 날짜 (각 월의 최댓값)을 배열 형태로 구성
		int [] months = {31, 0 , 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
		//테스트
		//System.out.println(months.length);

		//각각 요일의 이름을 배열 형태로 구성

		String[] weekNames = {"일요일","월요일","화요일","수요일","목요일","금요일","토요일"};
		
		//날 수를 종합할 변수
		int nalsu;

		//윤년에 따른 2월의 날 수 계산
		//입력년도가 윤년이라면 2월의 마지막 날짜를 29일로 설정
		//입력년도가 평년이라면 2월의 마지막 날짜를 28일로 설정
		if (y%4==0 && y%100!= 0 || y%400==0)			//입력 년도가 윤년이면
		{
			months[1] = 29;
		}
		else
			months[1] = 28;
		
		//①1년 1월 1일부터 입력받은 년도의 이전년도 12월 31일 까지의 일수를 계산
		nalsu = (y-1)*365 + (y-1)/4 -(y-1)/100 + (y-1)/400;
	
		//테스트
		//System.out.println("날 수 : " + nalsu);
		//② 입력받은 월의 이전 월까지의 날 수 계산 후,  1번 결과에 더하는 연산
			//for (int i = 0;i<(m-1) ;i++ )
		
			//nulsu += months[i];						//오타 오류~~!!!!!!!!!!!!!!

		for (int i=0; i<(m-1); i++)
			nalsu += months[i];

		//테스트
		//System.out.println("날 수 : " + nalsu);

		//입력받은 일의 날짜만큼 날 수 계산 후, 2번 결과에 더하는 연산
		nalsu += d;
		
		//--------------------이까지 수행하면 일 수 연산 끝
		//무슨 요일인지 확인하기 위한 연산
		int w = nalsu % 7;

		return weekNames[w];  //"금요일"
	}

	//메소드 기능 → 결과 출력하기
		public void print(String day)
		{	
		
			System.out.printf(">> %d년 %d월 %d일 → %s%n", y, m ,d, day);	
		}
		
}
public class Test099
{
	public static void main(String[] args)
	{
		// WeekDay 클래스 기반 인스턴스 생성
		WeekDay wd = new WeekDay();

		//입력 메소드 호출
		wd.input();
		// 요일 산출 메소드 호출
		String result = wd.week();

		//출력 메소드 호출
		wd.print(result);
	}
}
